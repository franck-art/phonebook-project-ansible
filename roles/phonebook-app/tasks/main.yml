---


# deployment role of phonebook app

- name: create project directory
  file:
    path: "{{ home }}/final-project"
    state: directory
  tags:
    - build
    - preprod
    - prod

- name: copy devops private key file
  copy:
    content: "{{ github_private_key }}"
    dest: "{{ home }}/.ssh/id_rsa"
    owner: centos
  tags:
    - build
    - preprod
    - prod

- name: load the source code in github
  git:
    repo: "{{ repo_fake_backend  }}"
    dest: "{{ home }}/final-project"
    accept_hostkey: yes
    force: yes
    recursive: no
    key_file: "{{ home }}/.ssh/id_rsa"
    version: "{{ branch_clone }}"
  tags:
    - build
    - preprod
    - prod

- name: Log into DockerHub
  docker_login:
    username: "{{ dockerhub_login_vault }}"
    password: "{{ dockerhub_pwd_vault }}"
  tags:
    - build
    - prod

- name: Create a global network of our two containers
  docker_network:
    name: phonebook_network
  tags:
    - preprod
    - prod

- name: Build phonebook-mysql 
  docker_image:
    build:
      path: "{{ home }}/final-project"
      dockerfile: Dockerfile-mysql
    name: "{{ dockerhub_login_vault }}/phonebook-image-mysql"
    state: present
    source: build
    tag: "{{ tag_version }}"
  tags:
    - build

- name: Build phonebook-app 
  docker_image:
    build:
      path: "{{ home }}/final-project"
      dockerfile: Dockerfile-app
    name: "{{ dockerhub_login_vault }}/phonebook-image-app"
    state: present
    source: build
    tag: "{{ tag_version }}"
  tags:
    - build

- block:
  - name: pull image of phonebook-mysql
    docker_image:
      name: "{{ dockerhub_login_vault }}/phonebook-image-mysql:{{ tag_version }}"
      source: pull

  - name: pull image of phonebook-app
    docker_image:
      name: "{{ dockerhub_login_vault }}/phonebook-image-app:{{ tag_version }}"
      source: pull
  tags:
    - prod


- block:
  - name: container phonebook mysql
    docker_container:
      name: phonebook-mysql
      image: "{{ dockerhub_login_vault }}/phonebook-image-mysql:{{ tag_version }}"
      state: started
      restart: yes
      networks:
        - name: phonebook_network

  - name: sleep for 20 seconds and continue with play
    wait_for:
      timeout: 20

  - name: container phonebook app
    docker_container:
      name: phonebook-app
      image: "{{ dockerhub_login_vault }}/phonebook-image-app:{{ tag_version }}"
      state: started
      ports:
        - "8181:8181"
      restart: yes
      networks:
        - name: phonebook_network
  tags:
    - preprod
    - prod

- name: Check that you can connect (GET) to a page and it returns a status 200
  uri:
    url: "http://{{ adresse_preprod }}:{{ port_preprod }}"
  tags:
    - test
